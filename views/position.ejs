<!-- CoachHome - developed by Kayl Murdough -->
<style>
    @media all and (min-width: 600px) {
      .bodyContainer {flex: 2 0px;}
      .sidenav {order: 1;}
      .chBody {order: 2;}
    }
    table.redTable {
    border: 2px solid #a40808;
    background-color: #eee7db;
    width: 90%;
    text-align: center;
    border-collapse: collapse;
    margin-left: 40px;
  }
  table.redTable td,
  table.redTable th {
    border: 1px solid #aaaaaa;
    padding: 3px 2px;
  }
  table.redTable tbody td {
    font-size: 13px;
    text-align: center;
  }
  /* table.redTable tr:nth-child(even) {
    background: #f5c8bf;
  } */
  table.redTable thead {
    background: #a40808;
  }
  table.redTable thead th {
    font-size: 19px;
    font-weight: bold;
    color: #ffffff;
    text-align: center;
    border-left: 2px solid #a40808;
  }
  table.redTable thead th:first-child {
    border-left: none;
  }

  table.redTable tfoot {
    font-size: 13px;
    font-weight: bold;
    color: #ffffff;
    background: #a40808;
  }
  table.redTable tfoot td {
    font-size: 13px;
    text-align: center;
  }
  table.redTable tfoot .links {
    text-align: right;
  }
  table.redTable tfoot .links a {
    display: inline-block;
    background: #ffffff;
    color: #a40808;
    padding: 2px 8px;
    border-radius: 5px;
  }
  .modal {
  display: none; /* Hidden by default */
  position: fixed; /* Stay in place */
  z-index: 1; /* Sit on top */
  left: 0;
  top: 0;
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  overflow: auto; /* Enable scroll if needed */
  background-color: rgb(0,0,0); /* Fallback color */
  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

/* Modal Content/Box */
.modal-content {
  background-color: #fefefe;
  margin: 5% auto; /* 15% from the top and centered */
  padding: 25px;
  border: 1px solid #888;
  width: 50%; /* Could be more or less, depending on screen size */
  align-self: center;
}

/* The Close Button */
.close {
  color: #aaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: black;
  text-decoration: none;
  cursor: pointer;
}
</style>
<div class="bigContainer">
  <!-- Includes topnav -->
  <%- include("partials/topnav") %>
  <div class="bodyContainer">
    <!-- Includes Side navigation -->
    <%- include("partials/sidenav") %>
    <div class="chBody" style="text-align: center;">
        <div class="row" style="margin-left:0;margin-right:0; justify-content:left">
            <a class="help" href="depthChart" style="margin-left: 40px;">Back</a>
        </div>
        <span class="help" style="padding-bottom: 20px;">Positional Depth Chart</span>
        <button class="btn btn-primary" id="myBtn" style="align-self: center;">Update <%= pos %> Rankings</button>
        <span class="help" name="pos" value="<%- pos %>" style="align-self: center; padding-bottom: 15px; padding-top: 20px;"><%= pos %></span>
        <table class="redTable" id="viewTable" style="width: 95%;" border="1">
            <tr>
                <th>Rank</th>
                <th>Name</th>
                <th>Game Grade</th> 
                <th>Practice Grade</th>
                <!-- <th>Quiz Grade</th> -->
                <th>Notes</th>
            </tr>
              <% var c = 0;
              var index = 0;
              var lowestRank = 1;
              var posIndex = 0;
              while (c < posPlayers.length && lowestRank < 30) {
                for (var j = 0; j < posPlayers[index].listPos.length; j++) {
                  if (posPlayers[index].listPos[j] == pos) {
                    posIndex = j;
                    break;
                  }
                }
                if (posPlayers[index].Rank[posIndex] == lowestRank) { %>
                  <tr>
                    <td><%= posPlayers[index].Rank[posIndex] %></td>
                    <td><%= posPlayers[index].FullName %></td>
                    <td><%= gameGrades[index] %></td>
                    <td><%= practiceStats[index] %></td>
                    <!-- <td><%= posPlayers[index].Grade %></td> -->
                    <td>Note</td>
                </tr>
                  <% c++;
                }
                if (index + 1 >= posPlayers.length) {
                  lowestRank++;
                  index = 0;
                } else {
                  index++;
                }
              } %>
        </table>
    </div>

    <!-- Start of Modal Content for entering practice grades -->
      <!-- The Modal PopUp Window-->
      <div id="myModal" class="modal" style="overflow-y:auto;">
        <!-- Modal content -->
        <div class="modal-content" style="text-align: center;">
          <span class="close" style="align-self: flex-start;">&times;</span>
          <span class="help" name="pos" value="<%- pos %>"><%= pos %></span>
          <br>
          <form action="/coach/posSubmitRank" method="POST">
          <input class="hidden" name="pos" value="<%- pos %>" hidden>
          <% var c = 0;
              var index = 0;
              var lowestRank = 1;
              var posIndex = 0;
              while (c < posPlayers.length && lowestRank < 30) {
                for (var j = 0; j < posPlayers[index].listPos.length; j++) {
                  if (posPlayers[index].listPos[j] == pos) {
                    posIndex = j;
                    break;
                  }
                }
                if (posPlayers[index].Rank[posIndex] == lowestRank) { %>
                  <input class="hidden" name="posIndex" value="<%- posIndex %>" hidden>
                  <input class="hidden" name="rankings" value="<%= posPlayers[index].Rank %>" hidden>
                  <input type="name" name="playerNames" value="<%= posPlayers[index].FullName %>" readonly>
                  <input type="number" name="rank" min='1' max='<%- posPlayers.length %>' value="<%- posPlayers[index].Rank[posIndex] %>">
                  <br>
                  <% c++;
                }
                if (index + 1 >= posPlayers.length) {
                  lowestRank++;
                  index = 0;
                } else {
                  index++;
                }
              } %>
          <% if (posPlayers.length != null && posPlayers.length > 0) { %>
            <div style="padding-top: 15px;">
              <input type="submit" class="btn btn-primary dropdown-toggle" value="Submit">
            </div>
          <% } %>          
          </form>
        </div>
      </div>
  </div>
</div>

<script>
// Get the modal
var modal = document.getElementById("myModal");
// Get the button that opens the modal
var btn = document.getElementById("myBtn");
// Get the <span> element that closes the modal
var span = document.getElementsByClassName("close")[0];
// When the user clicks on the button, open the modal
const delay = ms => new Promise(res => setTimeout(res, ms));

const modalDisp = async() => {
  modal.style.display = "block";
}

btn.onclick = modalDisp;

// When the user clicks on <span> (x), close the modal
  span.onclick = function() {
  modal.style.display = "none";
}
// When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
  if (event.target == modal) {
    modal.style.display = "none";
  }
}

// Makes buttons work
var dropdown = document.getElementsByClassName("dropdown-toggle");
var i;
// modal.style.display = "block";

for (i = 0; i < dropdown.length; i++) {
    dropdown[i].addEventListener("click", function () {
    this.classList.toggle("active");
    var dropdownContent = this.nextElementSibling;
    if (dropdownContent.style.display === "inline-block") {
        dropdownContent.style.display = "none";
    } else {
        dropdownContent.style.display = "inline-block";
    }
    });
}
</script>
  