<!-- CoachHome - developed by Kayl Murdough -->
<style>
    @media all and (min-width: 600px) {
      .bodyContainer {flex: 2 0px;}
      .sidenav {order: 1;}
      .chBody {order: 2;}
    }
    table.redTable {
    border: 2px solid #a40808;
    background-color: #eee7db;
    width: 90%;
    text-align: center;
    border-collapse: collapse;
    margin-left: 40px;
  }
  table.redTable td,
  table.redTable th {
    border: 1px solid #aaaaaa;
    padding: 3px 2px;
  }
  table.redTable tbody td {
    font-size: 13px;
    text-align: center;
  }
  /* table.redTable tr:nth-child(even) {
    background: #f5c8bf;
  } */
  table.redTable thead {
    background: #a40808;
  }
  table.redTable thead th {
    font-size: 19px;
    font-weight: bold;
    color: #ffffff;
    text-align: center;
    border-left: 2px solid #a40808;
  }
  table.redTable thead th:first-child {
    border-left: none;
  }

  table.redTable tfoot {
    font-size: 13px;
    font-weight: bold;
    color: #ffffff;
    background: #a40808;
  }
  table.redTable tfoot td {
    font-size: 13px;
    text-align: center;
  }
  table.redTable tfoot .links {
    text-align: right;
  }
  table.redTable tfoot .links a {
    display: inline-block;
    background: #ffffff;
    color: #a40808;
    padding: 2px 8px;
    border-radius: 5px;
  }
  .modal {
  display: none; /* Hidden by default */
  position: fixed; /* Stay in place */
  z-index: 1; /* Sit on top */
  left: 0;
  top: 0;
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  overflow: auto; /* Enable scroll if needed */
  background-color: rgb(0,0,0); /* Fallback color */
  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

/* Modal Content/Box */
.modal-content {
  background-color: #fefefe;
  margin: 5% auto; /* 15% from the top and centered */
  padding: 25px;
  border: 1px solid #888;
  width: 50%; /* Could be more or less, depending on screen size */
  align-self: center;
}

/* The Close Button */
.close {
  color: #aaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: black;
  text-decoration: none;
  cursor: pointer;
}
</style>
<!-- This script will be used for the responsive chart in Player Trends and Maxes. The graph is bootstrap created by Chart.js. -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>
<div class="bigContainer">
  <!-- Includes topnav -->
  <%- include("partials/topnav") %>
  <div class="bodyContainer">
    <!-- Includes Side navigation -->
    <%- include("partials/sidenav") %>
    <div class="chBody" style="text-align: center;">
        <div class="row" style="margin-left:0;margin-right:0; justify-content:left">
            <a class="help" href="depthChart" style="margin-left: 40px;">Back</a>
        </div>
        <span class="help" style="padding-bottom: 20px;"><%= player.FullName %></span>
        <span class="help" style="padding-bottom: 20px;"><%= school %></span>
        <span class="help" style="padding-bottom: 20px;">#<%= player.Number %></span>
        <table class="redTable" id="viewTable" style="width: 95%;" border="1">
            <tr>
                <td>Positions</td>
                <td><%= player.listPos %></td>
            </tr>
            <tr>
                <td>Email</td>
                <td><%= player.Email %></td>
            </tr>
            <tr>
                <td>Graduation Year</td>
                <td><%= player.GradYear %></td>
            </tr>
            <tr>
              <td>Practice Stat</td>
              <td><%= practice1 %></td>
          </tr>
        </table>
        <!-- The following section is code in relation to the chart.  -->
      <div class="row mt-5">
        <div class="col-md-6 m-auto">
          <div class="card card-body text-center">
            <canvas id="myChart" width="300" height="300"></canvas>
      <!-- If there is information in the graph, we will create the chart. -->
      <% if (allGrades) { %> 
        <script type="text/javascript">
        var grades = JSON.parse('<%- JSON.stringify(allGrades) %>');
        console.log('exercises ' + grades);
        console.log(grades.length);

      // Our labels along the x-axis
      // For drawing the lines    
      var dates = [];  
      var e1 = []; //The first intagible 
      var e2 = []; //The second intagible 
      var e3 = []; //The third intagible 
      var e4 = []; //The fourth intagible 
      var overall = [];
      

      //We will go through all the information pased by the graph variable and push it onto our arrays.
      for (var i = 0; i < grades.length; i++) {
          var date = grades[i].date;
          var dateSplit = date.split('T');
          dates.push(dateSplit[0]);
          overall.push(parseInt(grades[i].grade));
      }

        var ctx = document.getElementById("myChart"); //Retrieving the elementID of the chart above in canvas.
        var myChart = new Chart(ctx, { //Styling the graph. If you need more information on styling the graph please go to the Chart.js Documentation online.
          type: 'line',
          data: {
            labels: dates,
            datasets: [
            { 
              data: overall,
              label: "Overall Practice Grade",
              borderColor: "red",
              fill: false,
              pointRadius: 10,
            },
            ]
          },
          options: {
                responsive: true
            }
        });
        </script>
      <% } %>
          </div>
        </div>
      </div>
      
      <div class="row mt-5">
        <div class="col-md-6 m-auto">
          <div class="card card-body text-center">
            <canvas id="myChart2" width="300" height="300"></canvas>
      <!-- If there is information in the graph, we will create the chart. -->
      <% if (allGrades) { %> 
        <script type="text/javascript">
        var grades = JSON.parse('<%- JSON.stringify(allGrades) %>');

      // Our labels along the x-axis
      // For drawing the lines    
      var dates = [];  
      var e1 = []; //The first intagible 
      var e2 = []; //The second intagible 
      var e3 = []; //The third intagible 
      var e4 = []; //The fourth intagible 
      

      //We will go through all the information pased by the graph variable and push it onto our arrays.
      for (var i = 0; i < grades.length; i++) {
          var date = grades[i].date;
          var dateSplit = date.split('T');
          dates.push(dateSplit[0]);
          e1.push(parseInt(grades[i].int1));
          e2.push(parseInt(grades[i].int2));
          e3.push(parseInt(grades[i].int3));
          e4.push(parseInt(grades[i].int4));
      }

        var ctx = document.getElementById("myChart2"); //Retrieving the elementID of the chart above in canvas.
        var myChart = new Chart(ctx, { //Styling the graph. If you need more information on styling the graph please go to the Chart.js Documentation online.
          type: 'line',
          data: {
            labels: dates,
            datasets: [
            { 
              data: e1,
              label: "Intagible 1",
              borderColor: "red",
              fill: false,
              pointRadius: 10

            },
            { 
              data: e2,
              label: "Intagible 2",
              borderColor: "black",
              fill: false,
              pointRadius: 10

            },
            { 
              data: e3,
              label: "Intagible 3",
              borderColor: "blue",
              fill: false,
              pointRadius: 10,
            },
            { 
              data: e4,
              label: "Intagible 4",
              borderColor: "orange",
              fill: false,
              pointRadius: 10,
            },
            ]
          },
          options: {
                responsive: true
            }
        });
        </script>
      <% } %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
// Makes buttons work
var dropdown = document.getElementsByClassName("dropdown-toggle");
var i;
// modal.style.display = "block";

for (i = 0; i < dropdown.length; i++) {
    dropdown[i].addEventListener("click", function () {
    this.classList.toggle("active");
    var dropdownContent = this.nextElementSibling;
    if (dropdownContent.style.display === "inline-block") {
        dropdownContent.style.display = "none";
    } else {
        dropdownContent.style.display = "inline-block";
    }
    });
}
</script>
  